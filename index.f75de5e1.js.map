{"mappings":"AAAA;AAEA,MAAM,QAAQ,SAAS,aAAa,CAAC;AACrC,MAAM,aAAa,SAAS,gBAAgB,CAAC;AAE7C,WAAW,OAAO,CAAC,CAAC,MAAM;IACxB,KAAK,gBAAgB,CAAC,SAAS,CAAC;QAC9B,MAAM,YAAY,KAAK,WAAW;QAElC,UAAU,WAAW;IACvB;AACF;AAEA,SAAS,UAAU,SAAS,EAAE,WAAW;IACvC,MAAM,OAAO;WAAI,MAAM,OAAO,CAAC,EAAE,CAAC,QAAQ;KAAC;IAE3C,KAAK,IAAI,CAAC,CAAC,GAAG,IAAM,OAAO,GAAG,GAAG,WAAW;IAE5C,MAAM,iBAAiB,SAAS,sBAAsB;IAEtD,KAAK,OAAO,CAAC,CAAC,MAAQ,eAAe,WAAW,CAAC;IACjD,MAAM,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC;AAC/B;AAEA,SAAS,OAAO,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,WAAW;IAC1C,MAAM,QAAQ,EAAE,KAAK,CAAC,YAAY,CAAC,SAAS;IAC5C,MAAM,QAAQ,EAAE,KAAK,CAAC,YAAY,CAAC,SAAS;IAE5C,OAAQ;QACN,KAAK;QACL,KAAK;YACH,OAAO,MAAM,aAAa,CAAC;QAC7B,KAAK;YACH,OAAO,CAAC,QAAQ,CAAC;QACnB,KAAK;YACH,OAAO,YAAY,SAAS,YAAY;QAC1C;YACE,OAAO;IACX;AACF;AAEA,SAAS,YAAY,GAAG;IACtB,MAAM,aAAa,IAAI,OAAO,CAAC,MAAM,IAAI,KAAK,CAAC;IAC/C,MAAM,SAAS,OAAO;IAEtB,OAAO,MAAM,UAAU,IAAI;AAC7B","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableHeads = document.querySelectorAll('thead th');\n\ntableHeads.forEach((head, index) => {\n  head.addEventListener('click', (e) => {\n    const sortValue = head.textContent;\n\n    sortTable(sortValue, index);\n  });\n});\n\nfunction sortTable(sortValue, columnIndex) {\n  const rows = [...table.tBodies[0].children];\n\n  rows.sort((a, b) => sortBy(a, b, sortValue, columnIndex));\n\n  const sortedFragment = document.createDocumentFragment();\n\n  rows.forEach((row) => sortedFragment.appendChild(row));\n  table.tBodies[0].appendChild(sortedFragment);\n}\n\nfunction sortBy(a, b, sortValue, columnIndex) {\n  const cellA = a.cells[columnIndex].innerText;\n  const cellB = b.cells[columnIndex].innerText;\n\n  switch (sortValue) {\n    case 'Name':\n    case 'Position':\n      return cellA.localeCompare(cellB);\n    case 'Age':\n      return +cellA - +cellB;\n    case 'Salary':\n      return parseNumber(cellA) - parseNumber(cellB);\n    default:\n      return 0;\n  }\n}\n\nfunction parseNumber(str) {\n  const strNumbers = str.replace(/,/g, '').slice(1);\n  const number = Number(strNumbers);\n\n  return isNaN(number) ? 0 : number;\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}